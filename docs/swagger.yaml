basePath: /api
definitions:
  forms.CreateTransaction:
    properties:
      id:
        type: string
      products:
        items:
          $ref: '#/definitions/forms.Product'
        type: array
      status:
        type: string
      userId:
        type: string
    required:
    - products
    type: object
  forms.Product:
    properties:
      amount:
        type: integer
      name:
        type: string
      price:
        type: number
    required:
    - amount
    - name
    - price
    type: object
  models.Transaction:
    properties:
      amount:
        type: number
      id:
        type: string
      orderId:
        type: string
      status:
        type: string
      userId:
        type: string
    type: object
host: localhost:8082
info:
  contact: {}
  description: api-payments
  termsOfService: http://swagger.io/terms/
  title: Swagger Example API
  version: "1.0"
paths:
  /backend/transactions:
    post:
      consumes:
      - application/json
      description: Create an transaction with status Created
      operationId: api-payments-create-transaction
      parameters:
      - description: Add Product
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/forms.CreateTransaction'
      produces:
      - application/json
      responses:
        "200":
          description: id
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: Create an transaction
      tags:
      - transactions
  /backend/transactions/{id}:
    get:
      consumes:
      - application/json
      description: Get an created transaction
      operationId: api-payments-read-transaction
      parameters:
      - description: id
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Transaction'
      security:
      - ApiKeyAuth: []
      summary: Find an transaction
      tags:
      - transactions
  /backend/transactions/{id}/cancel:
    post:
      consumes:
      - application/json
      description: Get an created transaction
      operationId: api-payments-cancel-transaction
      parameters:
      - description: id
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Transaction'
      security:
      - ApiKeyAuth: []
      summary: Cancel an transaction
      tags:
      - transactions
securityDefinitions:
  ApiKeyAuth:
    in: header
    name: Access-token
    type: apiKey
swagger: "2.0"
